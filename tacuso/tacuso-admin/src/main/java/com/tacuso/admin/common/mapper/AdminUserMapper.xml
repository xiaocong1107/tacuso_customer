<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.tacuso.admin.common.dao.AdminUserMapper" >

  <!--结果集-->
  <resultMap id="BaseResultMap" type="com.tacuso.admin.common.model.AdminUser" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="nickname" property="nickname" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="pswd" property="pswd" jdbcType="VARCHAR" />
    <result column="salt" property="salt" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="last_login_time" property="lastLoginTime" jdbcType="TIMESTAMP" />
    <result column="status" property="status" jdbcType="BIGINT" />
  </resultMap>

  <!-- 基础列 -->
  <sql id="Base_Column_List" >
        id, nickname, email, pswd, salt ,create_time, last_login_time,status
  </sql>


  <sql id="limit_sql">
  	   <if test="page_sql != null and page_sql != ''">
      	${page_sql}
      </if>
  </sql>


  <sql id="where_all">
  	<where>
  	<if test="findContent != null and findContent !='' " >
        and (
        LOWER(nickname) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
        LOWER(email) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
        )
      </if>
      </where>
  </sql>


  <!-- 查询所有 -->
  <select id="findAll" resultMap="BaseResultMap" >
  	 select 
    <include refid="Base_Column_List" />
    from tacuso_admin_user
    <include refid="where_all"/>
    <include refid="limit_sql" />
  </select>

  <!-- 查询数量  -->
  <select id="findCount" resultMap="BaseResultMap" >
 	 select count(1) from  tacuso_admin_user
  	<include refid="where_all" />
  </select>


  <!-- 用户权限分配的分页查询 -->
  <select id="findUserAndRole" resultType="com.tacuso.admin.shiro.permission.bo.AdminUserRoleAllocationBo">
  	select u.id,u.nickname,u.email,u.create_time,u.last_login_time,u.status ,group_concat(ur.name) roleNames,group_concat(ur.id)roleIds from
    tacuso_admin_user u
	left join tacuso_admin_user_role uur on uur.uid = u.id
	left join tacuso_admin_role ur on ur.id = uur.rid
	<where>
  	<if test="findContent != null and findContent !='' " >
        and (
        LOWER(u.nickname) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%")) or
        LOWER(u.email) like  LOWER(CONCAT("%",#{findContent,jdbcType=VARCHAR},"%"))
        )
      </if>
      </where>
	group by u.id 
  </select>



  <select id="selectRoleByUserId" resultType="com.tacuso.admin.shiro.permission.bo.AdminRoleBo">
  		
		select ur.id,ur.name,ur.type,ifnull(uu.id,0)marker,uu.id userId from tacuso_admin_role ur
		left join tacuso_admin_user_role uur on uur.rid = ur.id
		left join (select id from tacuso_admin_user where id =#{id,jdbcType=BIGINT}) uu on uu.id = uur.uid
		group by ur.id
    <!--
              勾选不上自己调整sql语句，由于mysql版本不同，所以不支持，可以看看Demo项目 http://shiro.tacuso.com
              select ur.id,ur.name,ur.type,ifnull(uur.uid,0) marker from tacuso_admin_role ur
            left join(select * from tacuso_admin_user_role where uid=#{id,jdbcType=BIGINT}) uur on uur.rid = ur.id
             -->
  </select>

  <!-- 登录 -->
  <select id="login" resultMap="BaseResultMap" >
  	 select 
    <include refid="Base_Column_List" />
    from tacuso_admin_user
    where email = #{email,jdbcType=VARCHAR} and  pswd = #{pswd,jdbcType=VARCHAR} 
  </select>
  <!-- 根据邮箱|帐号查询 -->
  <select id="findUserByEmail" resultMap="BaseResultMap" >
  	 select 
    <include refid="Base_Column_List" />
    from tacuso_admin_user
    where email = #{email,jdbcType=VARCHAR} 
  </select>
  
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from tacuso_admin_user
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from tacuso_admin_user
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" useGeneratedKeys="true" keyProperty="id" parameterType="com.tacuso.admin.common.model.AdminUser" >
    insert into tacuso_admin_user (id, nickname, email,
      pswd,salt , create_time, last_login_time,status
      )
    values (#{id,jdbcType=BIGINT}, #{nickname,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{pswd,jdbcType=VARCHAR},#{salt,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{lastLoginTime,jdbcType=TIMESTAMP},#{status,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" useGeneratedKeys="true" keyProperty="id" parameterType="com.tacuso.admin.common.model.AdminUser" >
    insert into tacuso_admin_user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="nickname != null" >
        nickname,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="pswd != null" >
        pswd,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="lastLoginTime != null" >
        last_login_time,
      </if>
      <if test="status != null" >
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="nickname != null" >
        #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pswd != null" >
        #{pswd,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        #{status,jdbcType=BIGINT}
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.tacuso.admin.common.model.AdminUser" >
    update tacuso_admin_user
    <set >
      <if test="nickname != null" >
        nickname = #{nickname,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pswd != null" >
        pswd = #{pswd,jdbcType=VARCHAR},
      </if>
      <if test="salt != null">
        salt = #{salt,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="lastLoginTime != null" >
        last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.tacuso.admin.common.model.AdminUser" >
    update tacuso_admin_user
    set nickname = #{nickname,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      pswd = #{pswd,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      last_login_time = #{lastLoginTime,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>

  <select id="getAdminCount" resultType="int">
      select count(1) from tacuso_admin_user
  </select>

  <select id="getAllAdmin" resultMap="BaseResultMap">
      select
      <include refid="Base_Column_List" />
      from tacuso_admin_user  limit #{offset},#{pageSize}
  </select>

</mapper>
