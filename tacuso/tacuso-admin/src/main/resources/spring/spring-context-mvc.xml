<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:task="http://www.springframework.org/schema/task"
       xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans.xsd
	http://www.springframework.org/schema/context
	http://www.springframework.org/schema/context/spring-context-4.0.xsd
	http://www.springframework.org/schema/task
	http://www.springframework.org/schema/task/spring-task-4.0.xsd
	http://www.springframework.org/schema/mvc
	http://www.springframework.org/schema/mvc/spring-mvc-4.0.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop.xsd">

<!-- 自动装配 -->
    <context:component-scan base-package="com.tacuso.admin.controller;com.tacuso.admin.*.controller;com.tacuso.admin.*.*.controller" use-default-filters="false">
        <context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
        <context:include-filter type="annotation" expression="org.springframework.web.bind.annotation.ControllerAdvice"/>
    </context:component-scan>

    <!-- 自动扫描 标签 -->
    <context:component-scan base-package="com.tacuso.admin.tags;com.tacuso.*.tags" />


    <bean name="api" class="com.tacuso.admin.tags.APITemplateModel"></bean>
    <bean name="springContextUtil" class="com.tacuso.admin.common.utils.SpringContextUtil" scope="singleton"></bean>

    <mvc:resources mapping="/upload/**" location="/upload/" />
    <mvc:resources mapping="/images/**" location="/images/" />
    <mvc:resources mapping="/demo/**" location="/demo/" />
    <mvc:resources mapping="/css/**" location="/css/" />
    <mvc:resources mapping="/js/**" location="/js/" />

    <!-- 设置支持multi formdata 文件上传功能-->
    <bean id="multipartResolver"
          class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <property name="maxUploadSize" value="10485760000"/>
        <property name="defaultEncoding" value="UTF-8"/>
        <property name="maxInMemorySize" value="40960" />
    </bean>


    <!--格式转换器  配置json 日期格式 -->
    <bean id="objectMapper" class="com.fasterxml.jackson.databind.ObjectMapper">
        <property name="dateFormat">
            <bean class="java.text.SimpleDateFormat">
                <constructor-arg index="0" type="java.lang.String" value="yyyy-MM-dd HH:mm:ss"/>
            </bean>
        </property>
    </bean>


    <!-- 字段类型转换器 -->
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
        <property name="converters">
            <list>



            </list>
        </property>
    </bean>


    <bean id="conversionService2" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">

        <property name="formatters">
            <list>

            </list>
        </property>
        
    </bean>


    <!--JSON数据转换-->
    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="false">

            <!--<bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                <property name="supportedMediaTypes">
                    <list>
                        <value>application/json; charset=UTF-8</value>
                    </list>
                </property>
                <property name="prettyPrint" value="true"/>
                <property name="objectMapper" ref="objectMapper"/>
            </bean>-->

            <!--配置spring的转换器-->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter" />

            <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter" />

            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />

            <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter" />

            <!--配置fastjson-->
            <bean id="fastJsonHttpMessageConverter" class="com.alibaba.fastjson.support.spring.FastJsonHttpMessageConverter" >
                <!--加入支持的媒体类型，返回contentType-->
                <property name="supportedMediaTypes">
                    <list>
                        <!--这里顺序不能反，一定要先写text/html，不然IE下会出现下载提示-->
                        <value>text/html;charset=UTF-8</value>
                        <value>application/json;charset=UTF-8</value>
                    </list>
                </property>
                <property name="features">
                    <array value-type="com.alibaba.fastjson.serializer.SerializerFeature">
                        <!-- 避免循环引用 -->
                        <value>DisableCircularReferenceDetect</value>
                        <!-- 是否输出值为null的字段 -->
                        <value>WriteMapNullValue</value>
                        <!-- 数值字段如果为null,输出为0,而非null -->
                        <value>WriteNullNumberAsZero</value>
                        <!-- 字符类型字段如果为null,输出为"",而非null  -->
                        <value>WriteNullStringAsEmpty</value>
                        <!-- List字段如果为null,输出为[],而非null -->
                        <value>WriteNullListAsEmpty</value>
                        <!-- Boolean字段如果为null,输出为false,而非null -->
                        <value>WriteNullBooleanAsFalse</value>
                    </array>
                </property>
            </bean>

        </mvc:message-converters>
    </mvc:annotation-driven>


    <!--启用该标签代表 spring mvc 不拦截css、js、jpg等相关的静态资源-->
    <mvc:default-servlet-handler/>


    <!--===============通用视图解析器 begin===============-->
    <bean id="viewResolverCommon"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp" />
        <!--可为空,方便实现自已的依据扩展名来选择视图解释类的逻辑-->
        <property name="viewClass">
            <value>org.springframework.web.servlet.view.InternalResourceView</value>
        </property>
        <property name="order" value="1" />
    </bean>
    <!-- 视图解析器 -->
    <!-- 配置freeMarker视图解析器 -->
    <bean id="viewResolverFtl"
          class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver">
        <property name="viewClass" value="com.tacuso.admin.freemarker.extend.FreeMarkerViewExtend" />
        <!-- 把Freemarker 扩展一下，把相关属性加入进去。。。 -->
        <property name="contentType" value="text/html; charset=utf-8" />
        <property name="cache" value="true" />
        <property name="suffix" value=".ftl" />
        <property name="order" value="0" />
    </bean>
    <bean id="viewResolver"
          class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="order" value="2"></property>
        <property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
        <property name="prefix" value="/WEB-INF/views/" />
        <property name="suffix" value=".jsp"></property>
    </bean>


    <!-- 配置freeMarker 拓展-->
    <bean id="freemarkerConfig"
          class="com.tacuso.admin.freemarker.extend.FreeMarkerConfigExtend">
        <property name="templateLoaderPath">
            <value>/WEB-INF/ftl/</value>
        </property>
        <property name="freemarkerVariables">
            <map>
                <entry key="xml_escape" value-ref="fmXmlEscape" />
                <entry key="api" value-ref="api"/>
            </map>
        </property>
        <property name="defaultEncoding">
            <value>utf-8</value>
        </property>
        <property name="freemarkerSettings">
            <props><!-- 315360000 -->
                <prop key="template_update_delay">0</prop>
                <prop key="defaultEncoding">UTF-8</prop>
                <prop key="url_escaping_charset">UTF-8</prop>
                <prop key="locale">zh_CN</prop>
                <prop key="boolean_format">true,false</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="date_format">yyyy-MM-dd</prop>
                <prop key="time_format">HH:mm:ss</prop>
                <!--			<prop key="number_format">0.######</prop>-->
                <prop key="number_format">#</prop>
                <prop key="whitespace_stripping">true</prop>
                <!--<prop key="auto_import">
                     自动装载，引入Freemarker，用于Freemarker Macro引入
                    /common/config/top.ftl as _top,
                    /common/config/left.ftl as _left
                </prop>-->
            </props>
        </property>
    </bean>
    <bean id="fmXmlEscape" class="freemarker.template.utility.XmlEscape"/>
    <!--===============通用视图解析器 end===============-->


    <!-- 这个众人皆知的bean将为我们自动生成视图名 -->
    <bean id="viewNameTranslator" class="org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator"/>


    <!-- 定义拦截器 -->
    <!--<mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/*"/>


        </mvc:interceptor>
    </mvc:interceptors>-->


    <!-- aop -->
    <aop:aspectj-autoproxy proxy-target-class="true"/>

    <!-- shiro注解模式-->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator"
          depends-on="lifecycleBeanPostProcessor" >
        <property name="proxyTargetClass" value="true" />
        <property name="usePrefix" value="true"/>
    </bean>
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager" />
    </bean>

    <bean class="com.tacuso.admin.exception.ExceptionHandler"></bean>
</beans>